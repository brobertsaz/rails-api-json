type AffiliationType {
  id: ID!
  name: String!
  users: [UserType!]!
}

type BillType {
  breakdown: String
  congress: CongressType!
  diggingDeeper: String
  downvotePercentage: Int
  enactedOn: ISO8601DateTime
  featurePosition: Int
  featureState: Int
  forLeft: String
  forRight: String
  fullTextUrl: String!
  houseResult: String
  houseVotedOn: ISO8601DateTime
  id: ID!
  introducedOn: ISO8601DateTime
  isVisible: Boolean
  number: String!
  senateResult: String
  senateVotedOn: ISO8601DateTime
  slug: String!
  sponsor: MemberType!
  sponsors: [MemberType!]!
  summary: String!
  title: String!
  topic: TopicType
  upvotePercentage: Int
  veteodOn: ISO8601DateTime
  votes: [VoteType!]
}

type ChamberType {
  id: ID!
  members: [MemberType!]!
  name: String!
  votes: [VoteType!]!
}

type CongressType {
  id: ID!
  number: Int!
}

"""
Autogenerated input type of CreateUser
"""
input CreateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  name: String!
  password: String!
}

"""
Autogenerated return type of CreateUser
"""
type CreateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  user: UserType
}

type GenderType {
  id: ID!
  name: String!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type MemberType {
  bio: String
  bioguideId: String
  chamber: ChamberType!
  dateOfBirth: ISO8601DateTime
  facebook: String
  fax: String
  firstName: String
  gender: GenderType!
  id: ID!
  inOffice: Boolean!
  lastName: String
  leadershipRole: String
  middleName: String
  name: String!
  officeAddress: String
  party: String
  phone: String
  shortTitle: String
  slug: String
  state: StateType!
  suffix: String
  title: String
  twitter: String
  url: String
  youtube: String
}

type Mutation {
  createUser(input: CreateUserInput!): CreateUserPayload
  signinUser(input: SignInUserInput!): SignInUserPayload
}

type Query {
  allBills: [BillType!]!
  bill(id: ID!): BillType!
}

type RaceType {
  id: ID!
  name: String!
}

"""
Autogenerated input type of SignInUser
"""
input SignInUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated return type of SignInUser
"""
type SignInUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  token: String
  user: UserType
}

type StateType {
  abbreviation: String!
  id: ID!
  name: String!
}

type TopicType {
  id: ID!
  name: String!
  slug: String!
}

type UserError {
  message: String!
  path: String
}

type UserType {
  affiliation: AffiliationType
  billsShowIntro: ISO8601DateTime
  birthYear: Int
  dashboardsShowIntro: ISO8601DateTime
  email: String!
  gender: GenderType
  id: ID!
  membersIndexIntro: ISO8601DateTime
  name: String!
  race: RaceType
  state: StateType
  votedIn2016: Boolean
}

type VoteType {
  bill: BillType
  chamber: ChamberType
  id: ID!
  member: MemberType
  position: Int!
}